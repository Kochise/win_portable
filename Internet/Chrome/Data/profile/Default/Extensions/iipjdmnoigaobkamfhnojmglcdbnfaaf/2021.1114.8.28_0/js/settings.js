const Settings=function(){const ls=chrome.storage.sync,DEFAULT=Object.freeze({advancedUrlMatchingSet:DefaultSettings.ADVANCED_URL_MATCHING_SET,allowDuplicatesAcrossWindows:DefaultSettings.ALLOW_DUPLICATES_ACROSS_WINDOWS,allowList:DefaultSettings.ALLOW_LIST,blockList:DefaultSettings.BLOCK_LIST,browserAction:DefaultSettings.BROWSER_ACTION,cfWindowTheme:DefaultSettings.CF_WINDOW_THEME,closeDuplicateOriginator:DefaultSettings.CLOSE_DUPLICATE_ORIGINATOR,copyUrlsFormat:DefaultSettings.COPY_URLS_FORMAT,domainBlocklist:DefaultSettings.DOMAIN_BLOCK_LIST,floatingSearchWindow:DefaultSettings.FLOATING_SEARCH_WINDOW,ignoreHash:DefaultSettings.IGNORE_HASH,ignoreQuery:DefaultSettings.IGNORE_QUERY,inPageNotificationTheme:DefaultSettings.IN_PAGE_NOTIFICATION_THEME,isDomainBlocklistEnabled:DefaultSettings.ENABLE_DOMAIN_BLOCKLIST,keyboardCommandActions:DefaultSettings.KEYBOARD_COMMAND_ACTIONS,linkMarkers:DefaultSettings.LINK_MARKERS,listControlMode:DefaultSettings.LIST_CONTROL_MODE,moveOriginalTab:DefaultSettings.MOVE_ORIGINAL_TAB,notifyBackgroudDuplicatesClosed:DefaultSettings.NOTIFY_BACKGROUND_DUPLICATES_CLOSED,notifyOthers:DefaultSettings.NOTIFY_OTHERS,notifyPreviousDuplicates:DefaultSettings.NOTIFY_PREVIOUS_DUPLICATES,notifyWeeklyStats:DefaultSettings.NOTIFY_WEEKLY_STATS,popup_size:DefaultSettings.POPUP_SIZE,refreshOriginal:DefaultSettings.REFRESH_ORIGINAL,searchAllWindows:DefaultSettings.SEARCH_ALL_WINDOWS,showContextMenu:DefaultSettings.SHOW_CONTEXT_MENU,showCount:DefaultSettings.SHOW_COUNT,startState:DefaultSettings.START_STATE,tabCountLimitEnabled:DefaultSettings.TAB_COUNT_LIMIT_ENABLED,tabCountLimit:DefaultSettings.TAB_COUNT_LIMIT,tabCountLimitStyle:DefaultSettings.TAB_COUNT_LIMIT_STYLE});let mSettings=Object.assign({},DEFAULT),mIsInitialised=!1;async function init(force=!1){if(mIsInitialised&&!force)return;const st=await storageGet(DEFAULT);mSettings=Object.assign({},mSettings,st),mIsInitialised=!0}async function storageGet(getObject){return new Promise((resolve=>{ls.get(getObject,resolve)}))}async function storageSet(setObject){return new Promise((resolve=>{ls.set(setObject,resolve)}))}async function updateValue(key,value){if(mSettings[key]==value)return;const setObject={};setObject[key]=value,mSettings[key]=value,await storageSet(setObject)}return{DEFAULT:DEFAULT,init:init,onChanged:async function(changes){if(!mIsInitialised)return await init();changes&&Object.keys(changes).forEach((key=>{mSettings.hasOwnProperty(key)&&(mSettings[key]=null!=changes[key].newValue?changes[key].newValue:DEFAULT[key])}))},get:storageGet,set:storageSet,remove:function(removeKeys){return new Promise((resolve=>{ls.remove(removeKeys,resolve)}))},export:function(readable=!1){const settings=JSON.stringify(mSettings,null,"\t"),checksum=Utils.simpleChecksum(settings);return readable?settings:`${checksum},${btoa(settings)}`},import:async function(data=""){if(!data)return!1;const[checksum,b64Settings]=data.split(",");if(!checksum||!b64Settings)return!1;const settingsString=atob(b64Settings);if(checksum!==Utils.simpleChecksum(settingsString))return!1;let settingsObject={};try{settingsObject=JSON.parse(settingsString)}catch(e){return!1}return await storageSet(settingsObject),!chrome.runtime.lastError},get advancedUrlMatchingSet(){return _.cloneDeep(mSettings.advancedUrlMatchingSet)},get allowDuplicatesAcrossWindows(){return _.cloneDeep(mSettings.allowDuplicatesAcrossWindows)},get browserAction(){return _.cloneDeep(mSettings.browserAction)},get cfWindowTheme(){return _.cloneDeep(mSettings.cfWindowTheme)},get closeDuplicateOriginator(){return _.cloneDeep(mSettings.closeDuplicateOriginator)},get copyUrlsFormat(){return _.cloneDeep(mSettings.copyUrlsFormat)},get domainBlocklist(){return _.cloneDeep(mSettings.domainBlocklist)},get floatingSearchWindow(){return _.cloneDeep(mSettings.floatingSearchWindow)},get listControlMode(){return _.cloneDeep(mSettings.listControlMode)},get keyboardCommandActions(){return _.cloneDeep(mSettings.keyboardCommandActions)},get ignoreHash(){return _.cloneDeep(mSettings.ignoreHash)},get ignoreQuery(){return _.cloneDeep(mSettings.ignoreQuery)},get inPageNotificationTheme(){return _.cloneDeep(mSettings.inPageNotificationTheme)},get isDomainBlocklistEnabled(){return _.cloneDeep(mSettings.isDomainBlocklistEnabled)},get linkMarkers(){return _.cloneDeep(mSettings.linkMarkers)},get moveOriginalTab(){return _.cloneDeep(mSettings.moveOriginalTab)},get notifyBackgroudDuplicatesClosed(){return _.cloneDeep(mSettings.notifyBackgroudDuplicatesClosed)},get notifyOthers(){return _.cloneDeep(mSettings.notifyOthers)},get notifyPreviousDuplicates(){return _.cloneDeep(mSettings.notifyPreviousDuplicates)},get notifyWeeklyStats(){return _.cloneDeep(mSettings.notifyWeeklyStats)},get popup_size(){return _.cloneDeep(mSettings.popup_size)},get refreshOriginal(){return _.cloneDeep(mSettings.refreshOriginal)},get searchAllWindows(){return _.cloneDeep(mSettings.searchAllWindows)},get showContextMenu(){return _.cloneDeep(mSettings.showContextMenu)},get showCount(){return _.cloneDeep(mSettings.showCount)},get startState(){return _.cloneDeep(mSettings.startState)},get allowList(){return _.cloneDeep(mSettings.allowList)},get blockList(){return _.cloneDeep(mSettings.blockList)},get tabCountLimitEnabled(){return _.cloneDeep(mSettings.tabCountLimitEnabled)},get tabCountLimit(){return _.cloneDeep(mSettings.tabCountLimit)},get tabCountLimitStyle(){return _.cloneDeep(mSettings.tabCountLimitStyle)},get inPageNotificationsEnabled(){return mSettings.notifyBackgroudDuplicatesClosed==NotificationStyle.IN_PAGE||mSettings.notifyOthers==NotificationStyle.IN_PAGE||mSettings.notifyPreviousDuplicates==NotificationStyle.IN_PAGE||mSettings.notifyWeeklyStats==NotificationStyle.IN_PAGE||mSettings.tabCountLimitEnabled},set advancedUrlMatchingSet(value){updateValue("advancedUrlMatchingSet",value)},set allowDuplicatesAcrossWindows(value){updateValue("allowDuplicatesAcrossWindows",value)},set browserAction(value){updateValue("browserAction",value)},set cfWindowTheme(value){updateValue("cfWindowTheme",value)},set closeDuplicateOriginator(value){updateValue("closeDuplicateOriginator",value)},set copyUrlsFormat(value){updateValue("copyUrlsFormat",value)},set domainBlocklist(value){updateValue("domainBlocklist",value)},set floatingSearchWindow(value){updateValue("floatingSearchWindow",value)},set listControlMode(value){updateValue("listControlMode",value)},set keyboardCommandActions(value){updateValue("keyboardCommandActions",value)},set ignoreHash(value){updateValue("ignoreHash",value)},set ignoreQuery(value){updateValue("ignoreQuery",value)},set inPageNotificationTheme(value){updateValue("inPageNotificationTheme",value)},set isDomainBlocklistEnabled(value){updateValue("isDomainBlocklistEnabled",value)},set linkMarkers(value){updateValue("linkMarkers",value)},set moveOriginalTab(value){updateValue("moveOriginalTab",value)},set notifyBackgroudDuplicatesClosed(value){updateValue("notifyBackgroudDuplicatesClosed",value)},set notifyOthers(value){updateValue("notifyOthers",value)},set notifyPreviousDuplicates(value){updateValue("notifyPreviousDuplicates",value)},set notifyWeeklyStats(value){updateValue("notifyWeeklyStats",value)},set popup_size(value){updateValue("popup_size",value)},set refreshOriginal(value){updateValue("refreshOriginal",value)},set searchAllWindows(value){updateValue("searchAllWindows",value)},set showContextMenu(value){updateValue("showContextMenu",value)},set showCount(value){updateValue("showCount",value)},set startState(value){updateValue("startState",value)},set allowList(value){updateValue("allowList",value)},set blockList(value){updateValue("blockList",value)},set tabCountLimitEnabled(value){updateValue("tabCountLimitEnabled",value)},set tabCountLimit(value){updateValue("tabCountLimit",value)},set tabCountLimitStyle(value){updateValue("tabCountLimitStyle",value)},fetch:async a=>{const s=await storageGet(a);console.log(null!=a?s[a]:s)}}}();